diff --git a/data.go b/data.go
index 663b330..7b5f4d3 100644
--- a/data.go
+++ b/data.go
@@ -12,13 +12,14 @@ import (
 )
 
 const (
-	WINDOW_SIZE_X         uint    = 1000
-	WINDOW_SIZE_Y         uint    = 720
-	FPS                   uint    = 65
-	ASTEROID_LIMIT        uint    = 40
-	PLAYER_BOUNDARY       float64 = 1000
-	SPAWN_BOUNDARY        float64 = 1800
-	PLAYER_RESET_DISTANCE float64 = 3
+	WINDOW_SIZE_X            uint    = 1000
+	WINDOW_SIZE_Y            uint    = 720
+	FPS                      uint    = 65
+	ASTEROID_LIMIT           uint    = 40
+	PLAYER_BOUNDARY          float64 = 1000
+	SPAWN_BOUNDARY           float64 = 1800
+	PLAYER_RESET_DISTANCE    float64 = 3
+	ASTEROID_SPAWN_FREQUENCY uint    = 30
 )
 
 var (
diff --git a/main.go b/main.go
index 0813c4f..1fefca5 100644
--- a/main.go
+++ b/main.go
@@ -20,11 +20,9 @@ func main() {
 	durationPerFrame := time.Duration(int64(time.Second) / int64(FPS))
 
 	// setup
-	fmt.Println("Setting up window...")
 	setup()
 
 	// main loop
-	fmt.Println("Entering game loop...")
 	for WINDOW.IsOpen() {
 
 		// vsync
@@ -65,7 +63,6 @@ func input() {
 
 func update() {
 	fmt.Println(ASTEROIDS.Len())
-
 	// spawn asteroid
 	if rand.Intn(30) == 0 {
 		color := ASTEROID_COLORS[rand.Intn(len(ASTEROID_COLORS))]
@@ -114,7 +111,7 @@ func update() {
 		PLAYER.Transform.Velocity = NewZeroVector()
 	}
 
-	// check if asteroids are out of bounds
+	// remove asteroids that are out of bounds
 	for e, next := ASTEROIDS.Front(), new(list.Element); e != nil; e = next {
 		next = e.Next()
 		asteroid := e.Value.(*Asteroid_s)
@@ -139,7 +136,6 @@ func update() {
 			sumRadius := a1.Circle.Radius + a2.Circle.Radius
 			isIntersecting := distance-5 < sumRadius
 			if isIntersecting {
-
 				// wimpy collision resolution
 				resolve := func(x1, x2 Transform_s) Vector {
 					fromx1tox2 := x2.Position.Sub(x1.Position)
diff --git a/todo.md b/todo.md
index 090a2c5..07859a9 100644
--- a/todo.md
+++ b/todo.md
@@ -1,4 +1,3 @@
-- different color asteroids
 - player asteroid collision
 - implement slipstream
 	- When checking asteroid collisions
